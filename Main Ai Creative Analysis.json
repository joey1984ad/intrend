{
  "name": "AI Analysis - Step 2: Data Processing",
  "description": "Testing AI analysis step by step - Step 2: Creative Data Processing",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze-creatives",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "http://localhost:3000,https://intrend-pswh1dg2q-josephs-projects-4c670f3b.vercel.app,https://intrend-beta.vercel.app"
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [0, 0],
      "webhookId": "ai-analysis-step-2"
    },
    {
      "parameters": {
        "jsCode": "// Enhanced validation and data preparation for AI analysis\nconst data = $json;\nconst sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\nconsole.log(`üîç [${sessionId}] Processing AI analysis request:`, JSON.stringify(data, null, 2));\n\n// Enhanced validation with detailed error messages\nif (!data.accessToken) {\n  return {\n    json: {\n      status: 'error',\n      message: 'Access token is required for AI analysis',\n      sessionId: sessionId,\n      timestamp: new Date().toISOString(),\n      receivedData: data\n    }\n  };\n}\n\nif (!data.creativeId) {\n  return {\n    json: {\n      status: 'error',\n      message: 'Creative ID is required for AI analysis',\n      sessionId: sessionId,\n      timestamp: new Date().toISOString(),\n      receivedData: data\n    }\n  };\n}\n\nif (!data.adAccountId) {\n  return {\n    json: {\n      status: 'error',\n      message: 'Ad account ID is required for AI analysis',\n      sessionId: sessionId,\n      timestamp: new Date().toISOString(),\n      receivedData: data\n    }\n  };\n}\n\n// Prepare enhanced data for AI analysis\nconst enhancedData = {\n  ...data,\n  sessionId: sessionId,\n  workflowVersion: 'step-2-data-processing',\n  receivedAt: new Date().toISOString(),\n  processingStartTime: Date.now(),\n  analysisType: 'ai_creative_analysis'\n};\n\nconsole.log(`‚úÖ [${sessionId}] Validation passed, proceeding with AI analysis`);\nconsole.log(`üîë Access token: ${enhancedData.accessToken.substring(0, 10)}...`);\nconsole.log(`üéØ Creative ID: ${enhancedData.creativeId}`);\nconsole.log(`üè¢ Ad Account ID: ${enhancedData.adAccountId}`);\n\nreturn {\n  json: enhancedData\n};"
      },
      "id": "ai-validation",
      "name": "AI Validation",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [200, 0]
    },
    {
      "parameters": {
        "jsCode": "// Process creative data directly from frontend without external API calls\nconst webhookData = $json;\nconst sessionId = webhookData.sessionId;\n\nconsole.log(`üîç [${sessionId}] Processing creative data directly:`, JSON.stringify(webhookData, null, 2));\n\n// Extract image URL for AI analysis\nlet imageUrl = webhookData.imageUrl || webhookData.thumbnailUrl;\n\nif (!imageUrl) {\n  return {\n    json: {\n      error: \"No image URL found\",\n      message: \"Creative has no image content for AI analysis\",\n      sessionId: sessionId,\n      creativeId: webhookData.creativeId || 'unknown',\n      availableFields: Object.keys(webhookData),\n      timestamp: new Date().toISOString()\n    }\n  };\n}\n\n// Prepare data for AI analysis using frontend data\nconst aiAnalysisData = {\n  id: webhookData.creativeId,\n  name: webhookData.creativeName || 'Unnamed Creative',\n  status: 'active',\n  imageUrl: imageUrl,\n  image_hash: null,\n  body: webhookData.creativeName || '',\n  title: webhookData.creativeName || '',\n  callToAction: 'learn_more',\n  creativeType: webhookData.creativeType || 'image',\n  analysisContext: {\n    adAccountId: webhookData.adAccountId,\n    accessToken: webhookData.accessToken,\n    creativeId: webhookData.creativeId,\n    sessionId: sessionId\n  },\n  metadata: {\n    originalData: webhookData,\n    extractedAt: new Date().toISOString(),\n    processingMethod: 'direct_frontend_data'\n  }\n};\n\nconsole.log(`‚úÖ [${sessionId}] Successfully prepared data for AI analysis`);\n\nreturn {\n  json: aiAnalysisData\n};"
      },
      "id": "extract-creative-data",
      "name": "Extract Creative Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 0]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\"status\":\"success\",\"message\":\"AI Data Processing completed\",\"timestamp\":\"{{ $now.toISO() }}\",\"processedData\":\"{{ JSON.stringify($json) }}\",\"workflowVersion\":\"step-2-data-processing\"}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [600, 0]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "AI Validation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Validation": {
      "main": [
        [
          {
            "node": "Extract Creative Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Creative Data": {
      "main": [
        [
          {
            "node": "Webhook Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "step-2-data-processing",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "ai-analysis-step-2"
}