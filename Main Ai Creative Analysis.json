{
  "name": "Simple AI Creative Analysis",
  "description": "Simplified workflow that ensures webhook always responds",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "analyze-creatives",
        "responseMode": "responseNode",
        "options": {
          "allowedOrigins": "http://localhost:3000,https://intrend-pswh1dg2q-josephs-projects-4c670f3b.vercel.app,https://intrend-beta.vercel.app"
        }
      },
      "id": "webhook-trigger",
      "name": "Webhook Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [0, 0],
      "webhookId": "simple-ai-creative-analyzer"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.test }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "id": "check-if-test",
      "name": "Check If Test",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [200, 0]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "{\n  \"status\": \"success\",\n  \"message\": \"Test request successful\",\n  \"timestamp\": \"{{ $now.toISO() }}\",\n  \"workflowVersion\": \"simple-v1.0\"\n}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "test-response",
      "name": "Test Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [400, -100]
    },
    {
      "parameters": {
        "jsCode": "// Simple validation and response\nconst data = $json;\nconst sessionId = `session_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n\nconsole.log(`üîç [${sessionId}] Processing request:`, JSON.stringify(data, null, 2));\n\n// Basic validation\nif (!data.accessToken) {\n  return {\n    json: {\n      status: 'error',\n      message: 'Access token is required',\n      sessionId: sessionId,\n      timestamp: new Date().toISOString(),\n      receivedData: data\n    }\n  };\n}\n\nif (!data.creativeId) {\n  return {\n    json: {\n      status: 'error',\n      message: 'Creative ID is required',\n      sessionId: sessionId,\n      timestamp: new Date().toISOString(),\n      receivedData: data\n    }\n  };\n}\n\n// For now, just return a success response\nreturn {\n  json: {\n    status: 'success',\n    message: 'Request validated successfully',\n    sessionId: sessionId,\n    timestamp: new Date().toISOString(),\n    creativeId: data.creativeId,\n    adAccountId: data.adAccountId,\n    note: 'This is a simplified response - full AI analysis not yet implemented'\n  }\n};"
      },
      "id": "simple-processor",
      "name": "Simple Processor",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [400, 100]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ JSON.stringify($json) }}",
        "options": {
          "responseCode": 200,
          "responseHeaders": {
            "entries": [
              {
                "name": "Content-Type",
                "value": "application/json"
              }
            ]
          }
        }
      },
      "id": "webhook-response",
      "name": "Webhook Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [600, 100]
    }
  ],
  "connections": {
    "Webhook Trigger": {
      "main": [
        [
          {
            "node": "check-if-test",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check If Test": {
      "main": [
        [
          {
            "node": "test-response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "simple-processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Processor": {
      "main": [
        [
          {
            "node": "webhook-response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "simple-v1.0",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "id": "simple-ai-creative-analysis"
}